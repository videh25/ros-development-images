name: Multi-Image Docker Build & Publish

# Run on push to the main branch
on:
  push:
    branches: [ main ]
  # Allows manual triggering from the GitHub Actions UI
  workflow_dispatch:

jobs:
  # The 'build' job will run multiple times based on the matrix strategy
  build_and_publish:
    runs-on: ubuntu-latest
    
    # Crucial: Give the workflow job permission to write to the container registry
    permissions:
      contents: read
      packages: write
      
    # -----------------------------------------------------------
    # 1. MATRIX STRATEGY DEFINITION
    # This defines the parameters for each concurrent run of this job.
    # -----------------------------------------------------------
    strategy:
      matrix:
        images:
          - input_name: ros
            input_tag: humble-ros-base-jammy
            output_tag: humble-base-jammy
          - input_name: osrf/ros
            input_tag: humble-desktop-full-jammy
            output_tag: humble-desktop-jammy
          - input_name: ros
            input_tag: jazzy-ros-base-noble
            output_tag: jazzy-base-noble
          - input_name: osrf/ros
            input_tag: jazzy-desktop-full-noble
            output_tag: jazzy-desktop-noble
          - input_name: ros
            input_tag: rolling-ros-base-noble
            output_tag: rolling-base-noble
          - input_name: osrf/ros
            input_tag: rolling-desktop-full-noble
            output_tag: rolling-desktop-noble
            
    # The job name will be dynamically set (e.g., "Build Development Image")
    name: Build ${{ matrix.images.output_tag }} Image

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # -----------------------------------------------------------
      # 2. Setup Docker Buildx
      # Recommended to ensure advanced features (like caching) are available
      # -----------------------------------------------------------
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      # -----------------------------------------------------------
      # 3. Log into GHCR
      # Uses the built-in GITHUB_TOKEN to securely authenticate
      # -----------------------------------------------------------
      - name: Log into GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ vars.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      # -----------------------------------------------------------
      # 4. Build and Push the Image
      # This step runs for EACH images defined in the matrix.
      # -----------------------------------------------------------
      - name: Build and push ${{ vars.REGISTRY }}/${{ vars.IMAGE_NAME }}:${{ matrix.images.output_tag }} docker image
        uses: docker/build-push-action@v5
        with:
          # Build-time argument is passed using the matrix value
          build-args: BASE_IMAGE=${{ matrix.images.input_name }}:${{ matrix.images.input_tag }}
          
          # The Dockerfile is located in the repository root
          file: ./Dockerfile.base
          
          # Push the image to the registry (true)
          push: true
          
          # Define the tags using the matrix value
          tags: ${{ vars.REGISTRY }}/${{ vars.IMAGE_NAME }}:${{ matrix.images.output_tag }}
          # Use local cache for faster builds
          cache-from: type=local,dest=/home/${{ matrix.images.output_tag }},mode=max
          cache-to: type=local,dest=/home/${{ matrix.images.output_tag }},mode=max,compression=zstd
